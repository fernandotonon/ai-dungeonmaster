services:
  # ai-engine:
  #   build:
  #     context: ./ai-engine
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./ai-engine:/app
  #     - pip-cache:/root/.cache/pip
  #   environment:
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - GEMINI_API_KEY=${GEMINI_API_KEY}
  #   ports:
  #     - "5000:5000"

  game-server:
    build:
      context: ./game-server
      dockerfile: Dockerfile
    volumes:
      - ./game-server:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/rpg_game
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_AUDIO_BUCKET_NAME=audio-files
      - MINIO_IMAGE_BUCKET_NAME=image-files
      - JWT_SECRET=ai-dungeonmaster-secret
    depends_on:
      # - ai-engine
      - mongodb      
      - minio

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install --no-audit --no-fund && npm start"
    ports:
      - "80:3000"
      - "443:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - PUBLIC_URL=${PUBLIC_URL}
      - API_URL=${API_URL}
    depends_on:
      - game-server

  cloudflared:
    image: cloudflare/cloudflared
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - ./cloudflare-config.yml:/etc/cloudflared/config.yml:ro
      - ./cloudflare-tunnel-credentials.json:/etc/cloudflared/credentials.json:ro
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - game-server
    networks:
      - default

  mongodb:
    image: mongo:4.4.18
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"

volumes:
  pip-cache:
    driver: local
  mongodb_data:
  minio_data:

networks:
  default:
    name: ai-dungeonmaster-network